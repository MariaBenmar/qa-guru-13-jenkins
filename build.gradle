plugins {
    id 'java'
    id 'io.qameta.allure' version '2.10.0'
}

group 'qa.guru.allure'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

allure {
    report {
        version.set("2.18.1")
    }
    adapter {
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set("2.18.1")
            }
        }
    }
}


compileTestJava {
    options.encoding = 'UTF-8'
}

dependencies {
    // Selenide
    implementation("com.codeborne:selenide:6.0.0")
    testImplementation("com.codeborne:selenide:6.6.4")
    testRuntimeOnly("org.slf4j:slf4j-simple:1.7.30")

    // JUnit 5
    testImplementation (
            'org.junit.jupiter:junit-jupiter-api:5.8.2',
            'org.junit.jupiter:junit-jupiter-params:5.8.2',)

    // Guava
    testImplementation('com.google.guava:guava:31.1-jre')

    // JavaFaker
    testImplementation('com.github.javafaker:javafaker:0.12')

    //Allure
    testImplementation("io.qameta.allure:allure-selenide:2.18.1")

    //Owner
    testImplementation('org.aeonbits.owner:owner:1.0.4')

    //Asserts
    testImplementation('org.assertj:assertj-core:3.23.1')

    //Files
    testImplementation(
            'com.codeborne:pdf-test:1.7.0',
            'com.codeborne:xls-test:1.4.3',
            'com.opencsv:opencsv:5.6',
            'com.google.code.gson:gson:2.9.0',
            'com.fasterxml.jackson.core:jackson-core:2.13.3',
            'com.fasterxml.jackson.core:jackson-databind:2.13.3'
    )
    //Webdriver Manager
    testImplementation('io.github.bonigarcia:webdrivermanager:5.2.1')


}

test {
    useJUnitPlatform()
}

tasks.withType(Test) {
    systemProperties(System.getProperties())
    useJUnitPlatform()

    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

task properties_test6(type: Test) {
    useJUnitPlatform{
        includeTags "test6"
    }
}

task hello_test(type: Test) {
    useJUnitPlatform{
        includeTags "hello"
    }
}

task owner_test(type: Test) {
    useJUnitPlatform {
        includeTags "owner"
    }
}

task erarta_test(type: Test) {
    useJUnitPlatform {
        includeTags "erartaTest"
    }
}

